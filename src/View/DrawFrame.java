/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

/**
 *
 * @author pedro
 */
public class DrawFrame extends javax.swing.JFrame {

    public Principal principal;
    
    private ArrayList<Integer> clickedX;
    private ArrayList<Integer> clickedY;
    
    /**
     * Creates new form DrawFrame
     */
    public DrawFrame() {
        this.principal = principal;
        clickedX = new ArrayList<>();
        clickedY = new ArrayList<>();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        canvas2 = new java.awt.Canvas();

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 600));
        setPreferredSize(new java.awt.Dimension(600, 600));
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Desenhe da esquerda pra direita");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jButton2.setText("OK!");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        jButton3.setText("Limpar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("255");
        jPanel3.add(jLabel2, java.awt.BorderLayout.SOUTH);

        jLabel3.setText("0");
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel3.add(jLabel3, java.awt.BorderLayout.NORTH);

        jPanel2.add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel4.setText("0");
        jPanel4.add(jLabel4, java.awt.BorderLayout.WEST);

        jLabel5.setText("255");
        jPanel4.add(jLabel5, java.awt.BorderLayout.EAST);

        jPanel2.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        canvas2.setBackground(new java.awt.Color(255, 255, 255));
        canvas2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        canvas2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvas2MouseClicked(evt);
            }
        });
        jPanel2.add(canvas2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.principal.specifiedHistogram = new int[255];
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        if(clickedX.size() < 2){
            JOptionPane.showMessageDialog(this, "Nada especificado.");
        }
        else{
            
        this.principal.specifiedHistogram = new int[255];
        
        int extremoSuperior = clickedY.get(0);//Y menor
        int extremoInferior = clickedY.get(0);//Y maior
        int extremoDireito = clickedX.get(0);//X maior
        int extremoEsquerdo = clickedX.get(0);//X menor
        
        
        //Obter os extremos verticais
        for(int i = 0; i < clickedY.size(); i++){
            if(clickedY.get(i) < extremoSuperior){
                extremoSuperior = clickedY.get(i);
            }
            if(clickedY.get(i) > extremoInferior){
                extremoInferior = clickedY.get(i);
            }
        }
        
        //Obter os extremos horizontais
        for(int i = 0; i < clickedX.size(); i++){
            if(clickedX.get(i) > extremoDireito){
                extremoDireito = clickedX.get(i);
            }
            if(clickedX.get(i) < extremoEsquerdo){
                extremoEsquerdo = clickedX.get(i);
            }
        }
        
        System.out.println("Extremo superior = "+extremoSuperior+" e Extremo inferior = "+extremoInferior);
        System.out.println("Extremo esquerdo = "+extremoEsquerdo+" e Extremo direito = "+extremoDireito);
        
        ArrayList<Integer> pontosX = new ArrayList<>();
        ArrayList<Integer> pontosY = new ArrayList<>();
        
        //Obter os pontos
        for(int i = 1; i < clickedX.size(); i++){
            
            //i - 1 é o Ponto 1
            //i é o Ponto 2
            
            //m = dy / dx = v2.y - v1.y / v2.x - v1.x
            //b = v1.y - m * v1.x
            
            //Coeficiente angular
            float m = ((float)clickedY.get(i) - clickedY.get(i-1))/((float)clickedX.get(i) - clickedX.get(i-1));
            
            //Coeficiente linear
            float b = clickedY.get(i-1) - (m * clickedX.get(i-1));
            
            for(int j = clickedX.get(i-1); j < clickedX.get(i); j++){
                
                int y = (int) (m * j + b);
                //System.out.println(m+" * "+j+" + "+b);
                
                pontosX.add(j);
                pontosY.add(y);
            }
        }
        
        //Imprimir os pontos
        for(int i = 0; i < pontosX.size(); i++){
            //System.out.println("("+pontosX.get(i)+","+pontosY.get(i)+")");
        }
         
        principal.specifiedHistogram = new int[256];
        
        for(int i = 0; i < pontosX.size()-1; i++){
            
           int newX = map(pontosX.get(i), extremoEsquerdo, extremoDireito, 0, 255);
           int newY = map(pontosY.get(i), extremoInferior, extremoSuperior, 0, 255);
           //System.out.println("("+pontosX.get(i)+","+pontosY.get(i)+") -> ("+newX+","+newY+")");
           
           principal.specifiedHistogram[newX] = newY;
        }
        
        }
        
           this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    int map(long x, long in_min, long in_max, long out_min, long out_max){
        return Math.abs((int) ((x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min));
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        canvas2.repaint();
        clickedX = new ArrayList<>();
        clickedY = new ArrayList<>();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void canvas2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas2MouseClicked
        // TODO add your handling code here:
        int x = evt.getX();
        int y = evt.getY();
        
        //Só desenha linha quando houver um ponto já salvo
        if(!clickedX.isEmpty()){
            //O gráfico não pode voltar
            if(clickedX.get(clickedX.size() - 1) < x){
                canvas2.getGraphics().drawLine(clickedX.get(clickedX.size()-1), clickedY.get(clickedY.size()-1), x, y);
                
                clickedX.add(x);
                clickedY.add(y);
            }
            else{
                JOptionPane.showMessageDialog(this, "O gráfico não pode voltar!");
            }
        }
        else{
            clickedX.add(x);
            clickedY.add(y);
        }
    }//GEN-LAST:event_canvas2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrawFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrawFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrawFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrawFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DrawFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
